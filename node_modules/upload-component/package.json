{
  "name": "upload-component",
  "repo": "component/upload",
  "description": "file upload and progress api",
  "version": "0.1.1",
  "keywords": [
    "upload",
    "file"
  ],
  "dependencies": {
    "emitter-component": "*"
  },
  "devDependencies": {
    "express": "3.0.0rc4"
  },
  "component": {
    "scripts": {
      "upload/index.js": "index.js"
    }
  },
  "readme": "\n# upload\n\n  file upload and progress api\n\n## Installation\n\n    $ component install component/upload\n\n## Events\n\n  - `error` an error occurred\n  - `abort` upload was aborted\n  - `progress` (e) upload in progress (`e.percent`, `e.totalSize` etc)\n  - `end` upload is complete\n\n## API\n\n### Upload(file)\n\n  Initialize an `Upload` with the given `file`, where `file`\n  is a `File` object, for example from a `input.files[0]` `FileList`.\n\n```js\nvar upload = new Upload(file);\nvar upload = Upload(file);\n```\n\n### Upload#to(path, [fn])\n\n  __POST__ the multipart upload to `path` and invoke `fn(err, res)`.\n\n```js\nupload.to('/upload');\nupload.on('progress', reportProgress);\nupload.on('end', done);\n```\n\n## Running tests\n\n  Run the Express test server:\n\n```\n$ npm install\n$ make test\n```\n\n# License\n\n  MIT\n\n",
  "readmeFilename": "Readme.md",
  "_id": "upload-component@0.1.1",
  "_from": "upload-component@*"
}
